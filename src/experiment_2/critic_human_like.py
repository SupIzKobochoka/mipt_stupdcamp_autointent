from autointent.generation.chat_templates import Message, Role
from autointent.generation import Generator


class CriticHumanLike:
    """
    A simple critic class that classifies user utterances as either 'human' or 'generated'
    using an LLM-based binary classifier prompt.
    """

    def __init__(self, generator: Generator):
        """
        Initialize the CriticFirst.

        Args:
            generator: Wrapper for the LLM API to generate classification responses.
        """
        self.generator = generator

    def build_classification_prompt(self, example: str, intent_name: str) -> Message:
        """
        Args:
            example: The user utterance to classify.
            intent_name: The name of the intent associated with the utterance.

        Returns:
            Message: A formatted message prompt for classification.
        """
        content = (
            f"You are a critic that determines whether a user utterance was written by a human or generated by a language model.\n"
            f"Intent: {intent_name}\n"
            f"Utterance: \"{example}\"\n\n"
            "Respond with a one-word classification: `human` or `generated`. NO  EXPLANATION."
        )
        return Message(role=Role.USER, content=content)

    def is_human(self, utterance: str, intent_name: str) -> bool:
        """
        Args:
            utterance: The utterance to evaluate.
            intent_name: The associated intent.

        Returns:
            bool: True if classified as human, False otherwise.
        """
        prompt = self.build_classification_prompt(utterance, intent_name)
        response = self.generator.get_chat_completion([prompt])
        return response.strip().lower().startswith("human")
